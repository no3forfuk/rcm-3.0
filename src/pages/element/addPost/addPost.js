const app = getApp()
Component({
    /**
     * ÁªÑ‰ª∂ÁöÑÂ±ûÊÄßÂàóË°®
     */
    properties: {
        element: {
            type: Object,
            value: {}
        },
        height: {
            type: Number,
            value: 0,
            observer(n, o, c) {
                this.setData({
                    popupHeight: n,
                    scrollViewHeight: `calc(${n}px - 386rpx)`
                })
                this.setLargeTextareaHeight()
            }
        }
    },
    data: {
        allStar: [0, 0, 0, 0, 0],
        popupHeight: 0,
        rateValue: 0,
        postContentHeight: 0,
        scrollViewHeight: 0,
        postContent: [],
        lastIndex: 0,
        cursor: 0,
        keyboardHeight: 0,
        ctrlY: 0,
        textareaHeight: '',
        emojis: ['üòÄ', 'üòÅ', 'üòÇ', 'ü§£', 'üòÜ', 'üòä', 'üòã', 'üòç', 'üòò', 'üòó', 'üòô', 'üôÇ', 'ü§ó', 'ü§©', 'ü§î', 'ü§®', 'üòê', 'üòë', 'üò∂', 'üôÑ', 'üòè', 'üò£', 'üò•', 'üòÆ', 'ü§ê', 'üòØ', 'üò™', 'üò´', 'üò¥', 'üòå', 'üòõ', 'üòù', 'ü§§', 'üòí', 'üòì', 'üòî', 'üòï', 'üôÉ', 'ü§ë', 'üò≤', 'üôÅ', 'üòñ', 'üòû', 'üòü', 'üò§', 'üò¢', 'üò≠', 'üò¶', 'üòß', 'üò®', 'üò©', 'ü§Ø', 'üò¨', 'üò∞', 'üò±', 'üò≥', 'ü§™', 'üòµ', 'üò°', 'üò†', 'ü§¨', 'üò∑', 'ü§í', 'ü§ï', 'ü§¢', 'ü§Æ', 'ü§ß', 'üòá', 'üëà', 'üëâ', '‚òù', 'üëÜ', 'üñï', 'üëá', '‚úå', 'ü§û', 'üññ', 'ü§ò', 'üñê', '‚úã', 'üëå', 'üëç', 'üëé', '‚úä', 'üëä', 'ü§õ', 'ü§ú', 'ü§ö', 'üëã', 'ü§ü', 'ü§†', 'ü§°', 'ü§•', 'ü§´', 'ü§≠', 'üßê', 'ü§ì', 'üòà', 'üëπ', 'üë∫', 'üíÄ', 'üëª', 'üëΩ', 'üëæ', 'ü§ñ', 'üí©', 'üò∫', 'üòπ', 'üòª', 'üòº', 'üòΩ', 'üôÄ', 'üòø', 'üë∂', 'üë¶', 'üë¥', 'üëµ', 'üëÆ', 'üïµ', 'üíÇ', 'üë∑', 'ü§¥', 'üë∏', 'üë≥', 'üßï', 'üßî', 'üë±', 'üë®', 'üë©', 'ü§µ', 'üë∞', 'ü§∞', 'ü§±', 'üëº', 'üéÖ', 'ü§∂', 'üßô', 'üßö', 'üßõ', 'üßú', 'üßù', 'üßû', 'üßü', 'üôç', 'üôé', 'üôÖ', 'üôÜ', 'üíÅ', 'üôã', 'üôá', 'ü§¶', 'ü§∑', 'üíÜ', 'üíá', 'üö∂', 'üèÉ', 'üíÉ', 'üï∫', 'üßñ', 'üßò', 'üï¥', 'üë´', 'üíè', 'üë®', 'üë©', 'üíë', 'üë®', 'üë©', 'üë™', 'ü§≥', 'üí™', '‚úç', 'üëè', 'üëê', 'üôå', 'ü§≤', 'üôè', 'ü§ù', 'üíÖ', 'üëÇ', 'üëÉ', 'üë£', 'üëÄ', 'üß†', 'üëÖ', 'üëÑ', 'üíã', 'üëì', 'üëî', 'üëï', 'üëñ', 'üß£', 'üß§', 'üß•', 'üß¶', 'üëó', 'üëò', 'üëô', 'üëö', 'üëõ', 'üëú', 'üëù', 'üéí', 'üëû', 'üëü', 'üë†', 'üë°', 'üë¢', 'üëë', 'üëí', 'üé©', 'üéì', 'üß¢', 'üíÑ', 'üíç', 'üåÇ'],
    },
    ready() {
        app.tools.setScrollHeight({
            target: '.add-post-content',
            component: this,
            isComponent: true,
            success: height => {
                this.setData({
                    postContentHeight: height
                })
            }
        })
    },
    methods: {
        cancel() {
            this.triggerEvent('cancelAdd')
        },
        addRate(e) {
            this.setData({
                rateValue: e.currentTarget.dataset.index
            })
        },
        textareaInput(e) {
            const [content, item, index] = [this.data.postContent, e.currentTarget.dataset.item, e.currentTarget.dataset.index]
            item.value = e.detail.value
            content[index] = item
            this.setData({
                postContent: content
            })
        },
        insetTextarea() {
            this.setData({
                postContent: [...this.data.postContent, {
                    type: 'text',
                    value: ''
                }]
            })
        },
        //ËÆæÁΩÆÂ§ßÂûãËæìÂÖ•Ê°ÜÁöÑÈ´òÂ∫¶
        setLargeTextareaHeight() {

            this.setData({
                textareaHeight: `calc(${this.data.popupHeight}px - 386rpx)`
            })
        },
        //ËÆæÁΩÆÂ∞èÂûãËæìÂÖ•Ê°ÜÁöÑÈ´òÂ∫¶
        setSmallTextareaHeight(height) {
            this.setData({
                textareaHeight: `calc(${this.data.popupHeight - height}px - 386rpx)`
            })
        },
        //ÂºπËµ∑Â∫ïÈÉ®Â∑•ÂÖ∑Ê†è
        slideBottomBar() {
            var animation = wx.createAnimation({
                duration: 100,
                timingFunction: 'ease-out',
            })
            animation.bottom(this.data.ctrlY).step()
            this.setData({
                ctrlAnimation: animation.export()
            })
        },
        //Êî∂Ëµ∑Â∫ïÈÉ®Â∑•ÂÖ∑Ê†è
        slideDownBottomBar() {
            var animation = wx.createAnimation({
                duration: 100,
                timingFunction: 'ease-out',
            })
            animation.bottom(0).step()
            this.setData({
                ctrlAnimation: animation.export()
            })
        },
        //ËæìÂÖ•Ê°ÜËé∑ÂèñÁÑ¶ÁÇπ
        textareaFocus(e) {
            this.setData({
                ctrlY: e.detail.height,
            })
            this.setSmallTextareaHeight(e.detail.height);
            this.slideBottomBar()
        },
        //ËæìÂÖ•Ê°Ü‰∏¢Â§±ÁÑ¶ÁÇπ
        textareaBlur(e) {
            this.setData({
                cursor: e.detail.cursor,
                lastIndex: e.currentTarget.dataset.index
            })
            this.setLargeTextareaHeight()
            this.slideDownBottomBar()
        },
        //ÊèíÂÖ•Ê∞¥Âπ≥Á∫ø
        insertHr() {
            const content = this.data.postContent
            content.push({
                type: 'hr',
                value: ''
            })
            this.setData({
                postContent: content
            })
            this.closeSelectEmoji();
            this.slideDownBottomBar()
        },
        //ÈÄâÊã©ÂõæÁâá
        selectImages(e) {
            var animation = wx.createAnimation({
                duration: 350,
                timingFunction: 'ease-out',
            })
            animation.translateY(0).step()
            this.setData({
                selectImageAnimaticon: animation.export()
            })
        },
        //ÂèñÊ∂àÈÄâÊã©ÂõæÁâá
        cancelSelectImage() {
            var animation = wx.createAnimation({
                duration: 350,
                timingFunction: 'ease-out',
            })
            animation.translateY('100%').step()
            this.setData({
                selectImageAnimaticon: animation.export()
            })
        },
        selectIMG() {
            wx.chooseImage({
                success: res => {
                    for (let i = 0; i < res.tempFilePaths.length; i++) {

                        this.setData({
                            postContent: [...this.data.postContent, {
                                type: 'image',
                                src: res.tempFilePaths[i]
                            }]
                        })
                    }
                    this.cancelSelectImage()
                }
            })
        },
        selectVideo() {
            wx.chooseVideo({
                success: res => {
                    this.setData({
                        postContent: [...this.data.postContent, {
                            type: 'video',
                            src: res.tempFilePath
                        }]
                    })
                    this.cancelSelectImage()
                }
            })
        },
        //ÈÄâÊã©emoji
        selectEmoji(e) {
            const [content] = [this.data.postContent]
            let cursor = this.data.cursor
            let str = content[this.data.lastIndex].value
            let newStr = str.slice(0, cursor) + e.currentTarget.dataset.item + str.slice(cursor)
            content[this.data.lastIndex].value = newStr
            let len = e.currentTarget.dataset.item.length
            this.setData({
                postContent: content,
                cursor: parseInt(cursor) + parseInt(len)
            })
        },
        //ÊâìÂºÄemojiÈÄâÊã©Ê†è
        openSelectEmoji() {
            var animation = wx.createAnimation({
                duration: 100,
                timingFunction: 'ease-out',
            })
            animation.translateY(0).step()
            this.setData({
                emojiAnimation: animation.export()
            })
            this.setSmallTextareaHeight(this.data.ctrlY);
            this.slideBottomBar()
        },
        //ÂÖ≥Èó≠emojiÈÄâÊã©Ê†è
        closeSelectEmoji() {
            var animation = wx.createAnimation({
                duration: 100,
                timingFunction: 'ease-out',
            })
            animation.translateY('100%').step()
            this.setData({
                emojiAnimation: animation.export()
            })
            this.setSmallTextareaHeight(this.data.ctrlY)
        },
    }
})